"""
Referred to from https://github.com/Mjrovai/RPi-NodeMCU-Weather-Station/blob/master/IoT%20Weather%20Station/localDataToTS_v1_EXT.py
https://www.instructables.com/id/IoT-Weather-Station-With-RPi-and-ESP8266/

Wire color of DS18B20 - Red - Vcc, Black - Ground, Yellow - Data

MJRoBot IoT Local Weather Station
Sensor Data - Station:
	Temperature: External (not physicaly at station)
	Temperature: Station
	Humidity: Station
	Pressure: (Sea Level) 
	Altitude (calculated due absolut atmosferic pression)
Real Altitude: Station  ==> 950m (Lo Barnechea, Chile)
All local data uploaded to ThingSpeak.com
Channel Id: 483033
Client library for the thingspeak.com API developed by Mikolaj Chwaliz and Keith Ellis.
The library can be download from: https://github.com/mchwalisz/thingspeak
Install using: pip install thingspeak
Code developed by Marcelo Rovai - MJRoBot.org @ 26April18
"""

import time
import datetime

# Client library for the thingspeak.com API 
import thingspeak  

# ThingSpeak channel credentials 
chId = 1019050 # This is channel ID for Hot Room
tsKey='R2IJUEPZ5LE1AHG6' # This is API key for Office Hot Room
tsUrl='https://api.thingspeak.com/update'
ts = thingspeak.Channel(chId, tsUrl ,tsKey)

# DS18B20 1-Wire library
from w1thermsensor import W1ThermSensor 
sensor1 = W1ThermSensor(W1ThermSensor.THERM_SENSOR_DS18B20,"030797799d95" ) # By default GPIO 4 is used by library
sensor2 = W1ThermSensor(W1ThermSensor.THERM_SENSOR_DS18B20, "0117c1f918ff ")
# Get data (from local sensors)
def getLocalData():
	
	global timeString
	global tempIn
	global tempExt
	
	# Get time of reading
	now = datetime.datetime.now()
	timeString = now.strftime("%Y-%m-%d %H:%M")
	
	# Read Outside Temperature of Hot Room
	tempExt = round(sensor1.get_temperature(), 1)
	tempIn = round(sensor2.get_temperature(), 1)
	



def sendDataTs():
	data = {"field1": tempExt, 
		"field2": tempIn, 
			}
	ts.update(data)
	print ("[INFO] Data sent for 2 fields: ", tempExt, tempIn)
  
# Main function
def main():	
	print ("[INFO] Iniciating")
	while True:
		getLocalData()
		try:
			sendDataTs()
			time.sleep(60)
		except (KeyboardInterrupt):
			print ("[INFO] Finishing")
			break

''''--------------------------------------------------------------'''
if __name__ == '__main__':
	main()
